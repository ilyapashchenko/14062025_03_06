// ===== –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ =====
let currentUser = null;

// ===== –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ =====
document.addEventListener('DOMContentLoaded', () => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Mini App –∑–∞–ø—É—â–µ–Ω–∞ –≤ Telegram
  if (window.Telegram?.WebApp) {
    const webApp = Telegram.WebApp;
    webApp.expand(); // –†–∞—Å–∫—Ä—ã–≤–∞–µ–º –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
    
    // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    initUserData(webApp);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã (–ø—Ä–∏–º–µ—Ä)
    initServices();
  } else {
    // –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–µ—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ)
    console.log("–†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ Telegram WebApp");
    mockUserData();
    initServices();
  }
});

// ===== –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º =====
function initUserData(webApp) {
  const user = webApp.initDataUnsafe?.user;
  
  if (user) {
    currentUser = {
      id: user.id,
      name: user.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
      username: user.username,
      isPremium: user.is_premium || false
    };
    
    updateUserHeader();
  } else {
    console.log("–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã");
  }
}

function mockUserData() {
  // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ
  currentUser = {
    id: 123456789,
    name: "–ò–≤–∞–Ω –¢–µ—Å—Ç–æ–≤—ã–π",
    username: "ivan_test",
    isPremium: true
  };
  updateUserHeader();
}

function updateUserHeader() {
  if (!currentUser) return;
  
  const nameElement = document.querySelector('.username');
  const avatarElement = document.querySelector('.avatar');
  
  if (nameElement) {
    nameElement.textContent = currentUser.name;
    if (currentUser.isPremium) {
      nameElement.innerHTML += ' <span class="premium">‚≠êÔ∏è</span>';
    }
  }
  
  if (avatarElement) {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∞–≤–∞—Ç–∞—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ Telegram.WebApp.initDataUnsafe.user.photo_url)
    avatarElement.style.background = '#0088cc';
    avatarElement.innerHTML = currentUser.name.charAt(0);
  }
}

// ===== –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–µ—Ä–≤–∏—Å–æ–≤ =====
function initServices() {
  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ –∏–∑ localStorage –∏–ª–∏ API
  const serviceList = document.getElementById('serviceList');
  if (serviceList) {
    serviceList.innerHTML = `
      <div class="service-item">
        <div class="service-name">–ü—Ä–∏–º–µ—Ä —Å–µ—Ä–≤–∏—Å–∞ 1</div>
        <div class="service-actions">
          <button class="action-btn">üóëÔ∏è</button>
        </div>
      </div>
    `;
  }
}

// ===== –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ =====
function openModal() {
  document.getElementById('overlay').style.display = 'block';
  document.getElementById('addModal').style.display = 'block';
}

function closeModal() {
  document.getElementById('overlay').style.display = 'none';
  document.getElementById('addModal').style.display = 'none';
  document.getElementById('idInputModal').style.display = 'none';
}

function addByQR() {
  closeModal();
  // –ó–¥–µ—Å—å –ª–æ–≥–∏–∫–∞ –¥–ª—è QR-–∫–æ–¥–∞
  alert("QR-–∫–æ–¥: —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ");
}

function addByID() {
  document.getElementById('addModal').style.display = 'none';
  document.getElementById('idInputModal').style.display = 'block';
}

function submitId() {
  const input = document.getElementById('serviceIdInput');
  if (input && input.value) {
    alert(`–î–æ–±–∞–≤–ª–µ–Ω —Å–µ—Ä–≤–∏—Å —Å ID: ${input.value}`);
    input.value = '';
    closeModal();
  } else {
    alert("–í–≤–µ–¥–∏—Ç–µ ID —Å–µ—Ä–≤–∏—Å–∞");
  }
}

// ===== –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ =====
// –î–ª—è Telegram WebApp –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π
if (window.Telegram?.WebApp) {
  Telegram.WebApp.onEvent('viewportChanged', () => {
    console.log("Viewport changed");
  });
}
